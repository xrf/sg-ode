#!/usr/bin/env python
import argparse, os, subprocess, sys

macros = {
    "CC": None,
    "CPPFLAGS": None,
    "CFLAGS": None,
    "DESTDIR": None,
    "HARNESS": None,
    "LIBS": "-lm",
    "MPIEXEC": "mpiexec",
    "MPICC": "mpicc",
}

p = argparse.ArgumentParser()
p.add_argument("--prefix", metavar="<prefix>", default="")
p.add_argument("variables", metavar="VAR=<value>", nargs="*",
               help=("Supported variables: {}"
                     .format(" ".join(macros))))
args = p.parse_args()

# update macros with overrides from environment and arguments
macros = dict((k, os.environ.get(k, v)) for k, v in macros.items())
for var in args.variables:
    k, v = args.split("=", 1)
    if k in macros:
        macros[k.strip()] = v

fdevnull = open(os.devnull, "r+")

if macros["CFLAGS"] is None:
    macros["CFLAGS"] = "-g -O2 -Wall -Wconversion -Wextra -pedantic"
    if subprocess.call(["cc", "-std=c11", "-c", "-x", "c",
                        "-o", "/dev/null", "/dev/null"],
                       stdin=fdevnull,
                       stdout=fdevnull,
                       stderr=fdevnull) == 0:
        macros["CFLAGS"] += " -std=c11"
    elif subprocess.call(["cc", "-std=c99", "-c", "-x", "c",
                          "-o", "/dev/null", "/dev/null"],
                       stdin=fdevnull,
                       stdout=fdevnull,
                       stderr=fdevnull) == 0:
        macros["CFLAGS"] += " -std=c99"

with open("config.status.tmp", "w") as f:
    f.write("""
#!/bin/sh
if type makegen >/dev/null 2>&1; then
    makegen ./Makefile.py
fi &&
{{
{}    cat Makefile.in
}} >Makefile.tmp &&
mv Makefile.tmp Makefile
"""[1:].format("".join(
    "    echo {}={} &&\n"
    .format(k, "'{0}'".format(v.replace("'", "'\\''")))
                for k, v in sorted(macros.items())
                if v is not None)))
os.chmod("config.status.tmp", 0o755)
try:
    os.remove("config.status")
except OSError:
    pass
os.rename("config.status.tmp", "config.status")
sys.exit(subprocess.call(["./config.status"]))
